services:
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    image: matcha-server:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      CLIENT_DIST_PATH: ${CLIENT_DIST_PATH}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT}
      SESSION_MIDDLEWARE_SECRET: ${SESSION_MIDDLEWARE_SECRET}
      SESSION_MIDDLEWARE_RESAVE: ${SESSION_MIDDLEWARE_RESAVE}
      SESSION_MIDDLEWARE_SAVE_UNINITIALIZED: ${SESSION_MIDDLEWARE_SAVE_UNINITIALIZED}
      SESSION_MIDDLEWARE_COOKIE_MAX_AGE: ${SESSION_MIDDLEWARE_COOKIE_MAX_AGE}
      SESSION_MIDDLEWARE_COOKIE_SECURE: ${SESSION_MIDDLEWARE_COOKIE_SECURE}
      SESSION_MIDDLEWARE_COOKIE_HTTP_ONLY: ${SESSION_MIDDLEWARE_COOKIE_HTTP_ONLY}
      SESSION_MIDDLEWARE_COOKIE_SAME_SITE: ${SESSION_MIDDLEWARE_COOKIE_SAME_SITE}
      HTTPS_PORT: ${HTTPS_PORT}
      HTTPS_PORT_CLIENT: ${HTTPS_PORT_CLIENT}
      HTTPS_KEY: ${HTTPS_KEY}
      HTTPS_CERT: ${HTTPS_CERT}
      HTTPS_PASSPHRASE: ${HTTPS_PASSPHRASE}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "2000:2000"
    restart: "no"
